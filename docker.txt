	Docker está formado por dos programas: un demonio(actúa como servidor) y un cliente, que hace de control remoto del demonio.
	La primera acción a probar sería → en el terminal escribir: docker. Éste comando te muestra los argumentos que puede tener docker, como por ejemplo "docker version" que muestra la versión de docker instalada( de ambos programas).
	Docker es una herramienta linux para crear contenedores portátiles para cualquier contenedor. Dichos contenedores se encuentran alojados en el índice de Dockers. Para acceder a un contenedor escribimos: 
	  "Docker search <string>" indicando en string el nombre del contenedor.
	Ahora que sabemos el directorio "usuario/repositorio" podemos descargar el contenedor mediante la instrucción:
	  "Docker pull learn/tutorial"
	descargando una series de capas.
	Una vez que tenemos el contenedor para usarlo podemos probar a hacer lanzar el programa hello world. El comando sería
	  "Docker run learn/tutorial echo hello world"
	En este caso iniciamos el contenedor learn/tutorial y hacemos que ejecute nuestro programa. Cuando termina la ejecución del programa también lo hace la del contenedor.
	El siguiente paso es ver cómo modificar la imagen(el contenedor) que estamos utilizando para probar nuestras aplicaciones. La pregunta sería ¿podemos modificar nuestro contenedor añadiéndole programas? La respuesta es sí y la forma es como antes hemos lanzado el contenedor y sabiendo que es una distribución de ubuntu podemos hacer:
	  "docker run apt-get install -y ping"
	Instalando ping en nuestro contenedor, pero sin guardarse los cambios. Para poder seguir en este punto en el futuro debemos de guardar los cambios haciendo:
	  "docker ps -l" 
	Con esta acción podemos conocer la "id" de nuestra imagen para poder hacer el commit con ella.
	  "docker commit <id> learn/ping"
	Ahora ya hemos guardado los cambios hechos en en una nueva imagen y docker nos devuelve la id del nuevo contenedor("learn/ping")
	Para probar el nuevo entorno del contenedor hacemos:
	  "docker run learn/ping ping www.google.com"
        Si queremos conocer información relativa al contenedor debemos probar:
	  "docker ps" Nos devuelve la id del contenedor en ejecución
	  "docker inspect <id>" Nos muestra la información de nuestro contenedor.
	Por último si queremos compartirlo con la comunidad docker debemos usar el comando "push"
	  "docker push learn/ping"
